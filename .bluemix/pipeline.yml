---
stages:
- name: App Build Stage
  inputs:
  - type: git
    branch: master
    service: ${REPO}
  properties:
  - name: TF_VAR_ibmcloud_api_key
    value: "${API_KEY}"
    type: secure
  - name: TF_VAR_vpc_region
    value: "${VPC_REGION}"
    type: text
  - name: TF_VAR_vpc_ssh_keys
    value: "${VPC_SSH_KEYS}"
    type: text
  - name: TF_VAR_vpc_resource_group
    value: "${VPC_RESOURCE_GROUP}"
    type: text     
  - name: TF_VAR_vpc_resources_prefix
    value: "${VPC_RESOURCES_PREFIX}"
    type: text
  - name: PRIVATE_KEY
    value: "${PRIVATE_KEY}"
    type: secure     
  jobs:
  - name: App Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |
      #!/bin/bash
      set -eo pipefail
      bash scripts/build.sh
- name: VPC Deploy Stage
  inputs:
  - type: job
    stage: App Build Stage
    job: App Build
  triggers:
  - type: stage
  properties:
  - name: buildprops
    value: build.properties
    type: file  
  jobs:
  - name: Apply_Deploy_Test
    type: builder
    artifact_dir: ''
    build_type: customimage
    script: |-
      #!/bin/bash
      set -eo pipefail
      bash scripts/apply_deploy_test.sh
    docker_image: ibmterraform/terraform-provider-ibm-docker:v0.18.0
- name: VPC Clean-up Stage
  inputs:
  - type: job
    stage: VPC Deploy Stage
    job: Apply_Deploy_Test
  triggers:
  - type: stage
    enabled: false
  properties:
  - name: buildprops
    value: build.properties
    type: file  
  jobs:
  - name: Destroy
    type: builder
    artifact_dir: ''
    build_type: customimage
    script: |-
      #!/bin/bash
      set -eo pipefail
      bash scripts/destroy.sh
    docker_image: ibmterraform/terraform-provider-ibm-docker:v0.18.0